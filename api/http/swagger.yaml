basePath: /api/v1
definitions:
  core.AccountData:
    properties:
      address:
        type: string
      admin_addr:
        type: string
      balance:
        description: 'TODO: pointer here, bun bug'
        example: ""
        type: string
      collection_address:
        type: string
      content_description:
        type: string
      content_image:
        type: string
      content_image_data:
        items:
          type: integer
        type: array
      content_name:
        type: string
      content_uri:
        type: string
      editor_address:
        type: string
      initialized:
        type: boolean
      item_index:
        type: integer
      last_tx_hash:
        items:
          type: integer
        type: array
      last_tx_lt:
        type: integer
      master_address:
        description: OwnerAddress  *address.Address
        type: string
      mintable:
        type: boolean
      next_item_index:
        type: integer
      owner_address:
        description: universal column for many contracts
        type: string
      royalty_address:
        type: string
      royalty_base:
        type: integer
      royalty_factor:
        type: integer
      total_supply:
        description: 'TODO: pointer here, bun bug'
        example: ""
        type: string
      types:
        description: 'TODO: ContractType here, ch bug'
        items:
          type: string
        type: array
    type: object
  core.AccountState:
    properties:
      address:
        type: string
      balance:
        type: integer
      code:
        items:
          type: integer
        type: array
      code_hash:
        items:
          type: integer
        type: array
      data:
        items:
          type: integer
        type: array
      data_hash:
        items:
          type: integer
        type: array
      depth:
        description: 'TODO: do we need it?'
        type: integer
      is_active:
        type: boolean
      last_tx_hash:
        items:
          type: integer
        type: array
      last_tx_lt:
        type: integer
      latest:
        type: boolean
      state_data:
        $ref: '#/definitions/core.AccountData'
      state_hash:
        description: only if account is frozen
        items:
          type: integer
        type: array
      status:
        description: 'TODO: enum'
        type: string
      tick:
        type: boolean
      tock:
        type: boolean
      types:
        description: 'TODO: list all get method hashes'
        items:
          type: string
        type: array
    type: object
  core.Block:
    properties:
      file_hash:
        description: 'TODO: []byte here, go-bun bug on has-many'
        items:
          type: integer
        type: array
      master:
        $ref: '#/definitions/core.BlockID'
      root_hash:
        items:
          type: integer
        type: array
      seq_no:
        type: integer
      shard:
        type: integer
      shards:
        items:
          $ref: '#/definitions/core.Block'
        type: array
      transactions:
        items:
          $ref: '#/definitions/core.Transaction'
        type: array
      workchain:
        type: integer
    type: object
  core.BlockID:
    properties:
      seq_no:
        type: integer
      shard:
        type: integer
      workchain:
        type: integer
    type: object
  core.ContractInterface:
    properties:
      address:
        type: string
      code:
        items:
          type: integer
        type: array
      get_methods:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  core.ContractOperation:
    properties:
      contract_name:
        type: string
      name:
        type: string
      operation_id:
        type: integer
      outgoing:
        description: if operation is going from contract
        type: boolean
      schema:
        items:
          type: integer
        type: array
    type: object
  core.Message:
    properties:
      amount:
        description: 'TODO: uint256'
        type: integer
      body:
        items:
          type: integer
        type: array
      body_hash:
        items:
          type: integer
        type: array
      bounce:
        type: boolean
      bounced:
        type: boolean
      created_at:
        type: integer
      created_lt:
        type: integer
      dst_address:
        type: string
      fwd_fee:
        description: 'TODO: uint256'
        type: integer
      hash:
        items:
          type: integer
        type: array
      ihr_disabled:
        type: boolean
      ihr_fee:
        description: 'TODO: uint256'
        type: integer
      msg_type:
        description: 'TODO: ch enum'
        type: string
      operation_id:
        type: integer
      payload:
        $ref: '#/definitions/core.MessagePayload'
      source:
        $ref: '#/definitions/core.Transaction'
      source_tx_hash:
        description: |-
          SourceTx initiates outgoing message
          or contract can accept external incoming message in SourceTx
        items:
          type: integer
        type: array
      source_tx_lt:
        type: integer
      src_address:
        type: string
      state_init_code:
        items:
          type: integer
        type: array
      state_init_data:
        items:
          type: integer
        type: array
      transfer_comment:
        type: string
    type: object
  core.MessagePayload:
    properties:
      body_hash:
        items:
          type: integer
        type: array
      created_at:
        type: integer
      created_lt:
        type: integer
      data_json:
        type: string
      dst_address:
        type: string
      dst_contract:
        type: string
      hash:
        items:
          type: integer
        type: array
      msg_type:
        type: string
      operation_id:
        type: integer
      operation_name:
        type: string
      src_address:
        type: string
      src_contract:
        type: string
    type: object
  core.Transaction:
    properties:
      account:
        $ref: '#/definitions/core.AccountState'
      address:
        type: string
      block_seq_no:
        type: integer
      block_shard:
        type: integer
      block_workchain:
        type: integer
      created_at:
        type: integer
      created_lt:
        type: integer
      description:
        description: 'TODO: parse it (exit code, etc)'
        items:
          type: integer
        type: array
      end_status:
        type: string
      hash:
        items:
          type: integer
        type: array
      in_msg:
        allOf:
        - $ref: '#/definitions/core.Message'
        description: '`ch:"-" bun:"rel:belongs-to,join:in_msg_hash=hash"`'
      in_msg_hash:
        items:
          type: integer
        type: array
      orig_status:
        type: string
      out_msg:
        items:
          $ref: '#/definitions/core.Message'
        type: array
      prev_tx_hash:
        items:
          type: integer
        type: array
      prev_tx_lt:
        type: integer
      state_update:
        items:
          type: integer
        type: array
      total_fees:
        description: '`ch:"type:UInt256"`'
        type: integer
    type: object
host: localhost
info:
  contact:
    name: Dat Boi
    url: https://datboi420.t.me
  description: Project fetches data from TON blockchain.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: tonidx
  version: 0.0.1
paths:
  /account:
    get:
      consumes:
      - application/json
      description: Returns account states and its parsed data
      parameters:
      - description: account address
        in: query
        name: address
        type: string
      - description: only latest account states
        in: query
        name: latest
        type: boolean
      - description: include parsed data
        in: query
        name: with_data
        type: boolean
      - description: filter by interfaces
        in: query
        items:
          type: string
        name: interfaces
        type: array
      - description: filter FTs or NFTs by owner address
        in: query
        name: owner_address
        type: string
      - description: filter NFT items by collection address
        in: query
        name: collection_address
        type: string
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.AccountState'
            type: array
      summary: account data
      tags:
      - account
  /block:
    get:
      consumes:
      - application/json
      description: Returns filtered blocks
      parameters:
      - description: workchain
        in: query
        name: workchain
        type: integer
      - description: shard
        in: query
        name: shard
        type: integer
      - description: seq_no
        in: query
        name: seq_no
        type: integer
      - description: include transactions
        in: query
        name: with_transactions
        type: boolean
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.Block'
            type: array
      summary: block info
      tags:
      - block
  /contract/interface:
    get:
      consumes:
      - application/json
      description: Returns known contract interfaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.ContractInterface'
            type: array
      summary: contract interfaces
      tags:
      - contract
  /contract/operation:
    get:
      consumes:
      - application/json
      description: Returns known contract message payloads schema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.ContractOperation'
            type: array
      summary: contract operations
      tags:
      - contract
  /message:
    get:
      consumes:
      - application/json
      description: Returns filtered messages
      parameters:
      - description: msg hash
        in: query
        name: hash
        type: string
      - description: source address
        in: query
        name: src_address
        type: string
      - description: destination address
        in: query
        name: dst_address
        type: string
      - description: source contract interface
        in: query
        name: src_contract
        type: string
      - description: destination contract interface
        in: query
        name: dst_contract
        type: string
      - description: filter by contract operation names
        in: query
        items:
          type: string
        name: operation_names
        type: array
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.AccountState'
            type: array
      summary: transaction messages
      tags:
      - transaction
  /transaction:
    get:
      consumes:
      - application/json
      description: Returns transactions, states and messages
      parameters:
      - description: account address
        in: query
        name: address
        type: string
      - description: tx hash
        in: query
        name: hash
        type: string
      - description: with accounts
        in: query
        name: with_accounts
        type: boolean
      - description: filter by interfaces
        in: query
        items:
          type: string
        name: interfaces
        type: array
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.AccountState'
            type: array
      summary: transactions data
      tags:
      - transaction
schemes:
- http
swagger: "2.0"
