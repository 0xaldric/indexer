type NFTContentData {
    address: String!
    lastTxLT: Int!
    lastTxHash: String!

    uri: String
    name: String
    description: String
    image: String
    imageData: String
}

type NFTContentDataAggregate {
    uriUniq: [String]
    uriUniqCount: [String]
}

type NFTCollectionData implements ContractData {
    address: String!
    lastTxLT: Int!
    lastTxHash: String!

    nextItemIndex: Int
    ownerAddress: String
    content: NFTContentData
}

type NFTCollectionDataAggregate {
    ownerAddressUniq: [String]
    ownerAddressUniqCount: Int

    content: NFTContentDataAggregate
}

type NFTCollectionRoyaltyData implements ContractData {
    address: String!
    lastTxLT: Int!
    lastTxHash: String!

    royaltyAddress: String
    base: Int
    factor: Int
}

type NFTCollectionRoyaltyDataAggregate {
    royaltyAddressUniq: [String]
    royaltyAddressUniqCount: Int
}

type NFTItemData implements ContractData {
    address: String!
    lastTxLT: Int!
    lastTxHash: String!

    ownerAddress: String
    itemIndex: Int
    collectionAddress: String
    initialized: Boolean
    content: NFTContentData
}

type NFTItemDataAggregate {
    ownerAddressUniq: [String]
    ownerAddressUniqCount: Int

    collectionAddressUniq: [String]
    collectionAddressUniqCount: Int

    content: NFTContentDataAggregate
}

type NFTEditorData implements ContractData {
    address: String!
    lastTxLT: Int!
    lastTxHash: String!

    editorAddress: String
}

type NFTEditorDataAggregate {
    editorAddressUniq: [String]
    editorAddressUniqCount: Int
}
