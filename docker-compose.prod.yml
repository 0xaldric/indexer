version: "3.5"

x-anton-rewrites: &anton-rewrites
  build: .
  image: "${IMAGE_NAME:-anton}:${IMAGE_TAG:-latest}"

services:
  indexer:
    <<: *anton-rewrites
  rescan:
    <<: *anton-rewrites
  web:
    <<: *anton-rewrites
  migrations:
    <<: *anton-rewrites
  postgres:
    shm_size: 128gb
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5432:5432"
  clickhouse:
    shm_size: 128gb
    volumes:
      - ./config/clickhouse_backup_disk.xml:/etc/clickhouse-server/config.d/backup_disk.xml
      - ./backups/ch:/backups
    ports:
      - "9000:9000"
      - "8123:8123"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zk-data:/var/lib/zookeeper/data
      - ./zk-txn-logs:/var/lib/zookeeper/log
    ports:
      - 22181:2181
    networks:
      - indexer_network
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${EXTERNAL_IP}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    networks:
      - indexer_network
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8081:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - indexer_network